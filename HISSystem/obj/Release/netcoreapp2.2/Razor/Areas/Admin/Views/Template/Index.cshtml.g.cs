#pragma checksum "E:\GeneticGit\GeneticGit\genetic_system\HISSystem\Areas\Admin\Views\Template\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "4eda7188d2bf4287a0c19aa3fda4787169534fac"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Admin_Views_Template_Index), @"mvc.1.0.view", @"/Areas/Admin/Views/Template/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Areas/Admin/Views/Template/Index.cshtml", typeof(AspNetCore.Areas_Admin_Views_Template_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4eda7188d2bf4287a0c19aa3fda4787169534fac", @"/Areas/Admin/Views/Template/Index.cshtml")]
    public class Areas_Admin_Views_Template_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<Data.Helpers.PagedData<Data.Models.EpilepsyTemplate>>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 2 "E:\GeneticGit\GeneticGit\genetic_system\HISSystem\Areas\Admin\Views\Template\Index.cshtml"
  
    ViewData["Title"] = "Epilepsy Template List";
    Layout = "~/Views/Shared/_Admin.cshtml";

#line default
#line hidden
            BeginContext(165, 34, true);
            WriteLiteral("\r\n<div class=\"prtm-content\">\r\n    ");
            EndContext();
            BeginContext(200, 24, false);
#line 8 "E:\GeneticGit\GeneticGit\genetic_system\HISSystem\Areas\Admin\Views\Template\Index.cshtml"
Write(Html.Hidden("DeletedID"));

#line default
#line hidden
            EndContext();
            BeginContext(224, 128, true);
            WriteLiteral("\r\n    <div class=\"prtm-page-bar\">\r\n        <ul class=\"breadcrumb\">\r\n            <li class=\"breadcrumb-item text-capitalize\"><h2>");
            EndContext();
            BeginContext(353, 17, false);
#line 11 "E:\GeneticGit\GeneticGit\genetic_system\HISSystem\Areas\Admin\Views\Template\Index.cshtml"
                                                       Write(ViewData["Title"]);

#line default
#line hidden
            EndContext();
            BeginContext(370, 545, true);
            WriteLiteral(@"</h2></li>
            <li class=""breadcrumb-item""><a href=""#"">Dashboard</a></li>
            <li class=""breadcrumb-item""><a href=""#"">Ui elements</a></li>
            <li class=""breadcrumb-item""><a href=""#"" class=""active"">Epilepsy Template List</a></li>
        </ul>
    </div>
    <div class=""table-style"">
        <div class=""row mrgn-b-sm"">
            <div class=""col-md-5 col-lg-5"">
                <button onclick=""addepilypsytemplate()"" class=""btn btn-xs btn-primary""><i class=""fa fa-plus"" aria-hidden=""true""></i> Add</button>
");
            EndContext();
            BeginContext(1498, 560, true);
            WriteLiteral(@"            </div>

            <div class=""col-md-7 text-right search-block"">
                <div class=""input-group pull-right"" id=""adv-search"">
                    <input type=""text"" name=""search"" id=""search1"" class=""form-control"" placeholder=""Search..."" onkeyup=""getepilepsysearch(1);"" />

                </div>
            </div>

        </div>
        <div class=""prtm-block pos-relative"">
            <div class=""prtm-block-content"">
                <div class=""table-responsive"">
                    <div id=""userList"" class=""unseen"">
");
            EndContext();
#line 42 "E:\GeneticGit\GeneticGit\genetic_system\HISSystem\Areas\Admin\Views\Template\Index.cshtml"
                          
                            Html.RenderPartial("Getepilepsy");
                        

#line default
#line hidden
            BeginContext(2177, 283, true);
            WriteLiteral(@"                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal -->

    <div class=""add-modal"">
        <div id=""modalDiv"" class=""modal fade"" role=""dialog"">

        </div>
    </div>

    <!---End Model--->

</div>

");
            EndContext();
            DefineSection("scripts", async() => {
                BeginContext(2477, 8602, true);
                WriteLiteral(@"
    <script type=""text/javascript"">
        function addepilypsytemplate() {
        $.ajax({
            url: '/admin/template/AddEpilepsyTemplate',
            contentType: 'application/json; charse=utf-8',
            type: 'get',
            success: function (result) {
                $('#modalDiv').html(result);
                $('#modalDiv').modal('show');
            },
            error: function (xhr, status) {
                alert(status)
            }
        });
        }
        function SaveEpilepsy() {

                var data = new FormData();
       
        data.append(""GeneID"", $(""#GeneID"").val());
        data.append(""GeneticMutation"", $(""#GeneticMutation"").val());
        data.append(""PersonalRiskFactor"", $(""#PersonalRiskFactor"").val());
        data.append(""Hereditary"", $(""#Hereditary"").val());
        data.append(""Recommendations"", $(""#Recommendations"").val());
           if (document.getElementById('HaveMutation').checked) {
                data.append('Ha");
                WriteLiteral(@"veMutation', ""true"");
            }
    
             $.ajax({
            url: '/admin/template/AddEpilepsyTemplates',
            data: data,
            type: 'Post',
            processData: false, contentType: false,
            success: function (result) {
                if (result) {
                    alert('Data Saved !')
                    $('#modalDiv').modal('hide');
                    window.location.reload();
                }
            },
            error: function (xhr, status) {
                alert(status)
            }
        });



        }
        function RefreshPage() {
            var page = parseInt($('.page-number').html());
            debugger
            $.ajax({
                url: '/admin/user/_index',
                data: { ""page"": page },
                success: function (data) {
                    debugger
                    $(""#userList"").html(data);
                    debugger
                }
            });
        }

");
                WriteLiteral(@"        function editEpilepsy(id) {
                             $.ajax({
            url: '/admin/template/UpdateEpilepsyTemplate/' + id,
            success: function (result) {
                debugger
                $('#modalDiv').html(result);
                $('#modalDiv').modal('show');
            },
            error: function (xhr, status) {
                alert(status)
            }
        });
           
        }
         function UpdateEpilepsyTemplate() {
                var data = new FormData();
       
             data.append(""GeneID"", $(""#GeneID"").val());
             data.append(""ID"", $(""#ID"").val());
        data.append(""GeneticMutation"", $(""#GeneticMutation"").val());
        data.append(""PersonalRiskFactor"", $(""#PersonalRiskFactor"").val());
        data.append(""Hereditary"", $(""#Hereditary"").val());
        data.append(""Recommendations"", $(""#Recommendations"").val());
           if (document.getElementById('HaveMutation').checked) {
                data.append('");
                WriteLiteral(@"HaveMutation', ""true"");
            }
    
             $.ajax({
            url: '/admin/template/UpdateEpilepsyTemplates',
            data: data,
            type: 'Post',
            processData: false, contentType: false,
            success: function (result) {
                if (result) {
                    alert('Data Saved !')
                    $('#modalDiv').modal('hide');
                    window.location.reload();
                }
            },
            error: function (xhr, status) {
                alert(status)
            }
        });
                        





            }


     

        function Detele(id) {
            $('#DeletedID').val(id);
            swal({
                title: ""Are you sure?"",
                text: ""Are you sure you want to delete this record!"",
                type: ""warning"",
                showCancelButton: true,
                confirmButtonClass: ""btn-warning"",
                confirmButtonText: ""Yes, del");
                WriteLiteral(@"ete it!"",
                closeOnConfirm: false
            },
                function () {
                    debugger
                    var id = $(""#DeletedID"").val();
                    $.ajax({
                        url: '/admin/template/delete?id=' + id,
                        type: 'GET',
                        success: function (data) {
                            debugger
                            swal(""Deleted!"", ""Your imaginary file has been deleted."", ""success"");
                            location.reload();
                        },
                        error: function () {
                            debugger
                            swal(""Cancelled"", ""Something went wrong :)"", ""error"");
                        }
                    });
                });
        }

        function getepilepsysearch(i) {
            debugger
            var Page = i;
            var searchstring = $(""#search1"").val();
            $.ajax({
                        url");
                WriteLiteral(@": '/admin/template/Getepilepsy?page=' +Page+'&searchstring='+searchstring,
                        type: 'GET',
                    success: function (result) {
                        debugger
                         $("".unseen"").html(result)
                          },
                        error: function (xhr, status) {
                            toastr.error('Something went wrong');
                        }
                       });



        }

        function GetLogTable(id) {
            debugger
            $.ajax({
                url: '/admin/user/History?id=' + id+'&tableName=user',
                type: 'GET',
                success: function (data) {
                    $("".modal-content"").html(data);
                    $(""#exampleModalCenter"").modal().toggle();
                },
                error: function () {
                    toastr.error('Something went wrong');
                }
            });
        }

        function GetAttachment(id) {");
                WriteLiteral(@"
             $.ajax({
                url: '/admin/user/Attachment?id='+id+'&tableName=user',
                type: 'GET',
                success: function (data) {
                    $("".modal-content"").html(data);
                    $(""#exampleModalCenter"").modal().toggle();
                },
                error: function () {
                    toastr.error('Something went wrong');
                }
            });
        }
        $(""body"").on(""click"", ""#pdfExport"", function () {
            html2canvas($('#userTbl')[0], {
                onrendered: function (canvas) {
                    var data = canvas.toDataURL();
                    var docDefinition = {
                        content: [{
                            image: data,
                            width: 500
                        }]
                    };
                    pdfMake.createPdf(docDefinition).download(""Table.pdf"");
                }
            });
        });

        function fnExcelR");
                WriteLiteral(@"eport() {
            var tab_text = ""<table border='2px'><tr bgcolor='#87AFC6'>"";
            var textRange; var j = 0;
            var tab = document.getElementById('userTbl'); // id of table

            for (j = 0; j < tab.rows.length; j++) {
                tab_text = tab_text + tab.rows[j].innerHTML + ""</tr>"";
            }

            tab_text = tab_text + ""</table>"";
            tab_text = tab_text.replace(/<A[^>]*>|<\/A>/g, """");//remove if u want links in your table
            tab_text = tab_text.replace(/<img[^>]*>/gi, """"); // remove if u want images in your table
            tab_text = tab_text.replace(/<input[^>]*>|<\/input>/gi, """"); // reomves input params

            var ua = window.navigator.userAgent;
            var msie = ua.indexOf(""MSIE "");

            if (msie > 0 || !!navigator.userAgent.match(/Trident.*rv\:11\./))      // If Internet Explorer
            {
                txtArea1.document.open(""txt/html"", ""replace"");
                txtArea1.document.write(tab_t");
                WriteLiteral(@"ext);
                txtArea1.document.close();
                txtArea1.focus();
                sa = txtArea1.document.execCommand(""SaveAs"", true, ""Patients.xls"");
            }
            else                 //other browser not tested on IE 11
                sa = window.open('data:application/vnd.ms-excel,' + encodeURIComponent(tab_text));

            return (sa);
        }
    </script>
");
                EndContext();
            }
            );
            BeginContext(11082, 4, true);
            WriteLiteral("\r\n\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Data.Helpers.PagedData<Data.Models.EpilepsyTemplate>> Html { get; private set; }
    }
}
#pragma warning restore 1591
