#pragma checksum "E:\GeneticSystem Unified\GC 21.2.20 J\GeneticSystem\HISSystem\Areas\Admin\Views\Patient\CompletedAppointments.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "c5c9e6c2173e264ab16f3cfd8cb3587095f0e78a"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Admin_Views_Patient_CompletedAppointments), @"mvc.1.0.view", @"/Areas/Admin/Views/Patient/CompletedAppointments.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Areas/Admin/Views/Patient/CompletedAppointments.cshtml", typeof(AspNetCore.Areas_Admin_Views_Patient_CompletedAppointments))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c5c9e6c2173e264ab16f3cfd8cb3587095f0e78a", @"/Areas/Admin/Views/Patient/CompletedAppointments.cshtml")]
    public class Areas_Admin_Views_Patient_CompletedAppointments : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<Data.Models.Appointment>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 2 "E:\GeneticSystem Unified\GC 21.2.20 J\GeneticSystem\HISSystem\Areas\Admin\Views\Patient\CompletedAppointments.cshtml"
  
    ViewData["Title"] = "Appointment";
    Layout = "~/Views/Shared/_Admin.cshtml";

#line default
#line hidden
            BeginContext(125, 238, true);
            WriteLiteral("<style>\r\n    .modal-dialog {\r\n        width: 650px;\r\n        margin: 30px auto;\r\n    }\r\n</style>\r\n\r\n<div class=\"shadow\"></div>\r\n<div class=\"hideSkipLink\">\r\n</div>\r\n<div class=\"popup-result\" id=\"searchwithid\" style=\"display:none;\"></div>\r\n");
            EndContext();
            BeginContext(658, 870, true);
            WriteLiteral(@"<div class=""prtm-content"">
    <div class=""row"">
        <div class=""col-md-4 col-lg-4"">
            <div class=""btn-group btn-group-justified mrgn-b-xs"">
                <a class=""btn btn-xs  btn-success"" href=""/admin/patient/completedAppointments/""><i class=""fa fa-pencil-square-o"" aria-hidden=""true""></i> Completed Appointments</a>
                <a class=""btn btn-xs  btn-warning"" href=""/admin/patient/cancelledAppointments/""><i class=""fa fa-pencil-square-o"" aria-hidden=""true""></i> Cancelled Appointments</a>
            </div>
        </div>
        <div class=""col-md-4 col-lg-4"">
            <a class=""btn btn-xs btn-primary getAppointmentList""> AppointmentList Popup </a>
        </div>

    </div>
    <div class=""row"">
        <div class=""col-md-5"">
            <div class=""form-group"">
                <label>Doctor</label>
                ");
            EndContext();
            BeginContext(1529, 174, false);
#line 40 "E:\GeneticSystem Unified\GC 21.2.20 J\GeneticSystem\HISSystem\Areas\Admin\Views\Patient\CompletedAppointments.cshtml"
           Write(Html.DropDownListFor(m => m.DoctorID, new SelectList(ViewBag.Doctor, "ID", "EnFirstName"), "Select doctor", new { @Class = "form-control", onchange = "filterDoctors(this)" }));

#line default
#line hidden
            EndContext();
            BeginContext(1703, 167, true);
            WriteLiteral("\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-5\">\r\n            <div class=\"form-group\">\r\n                <label>Department</label>\r\n                ");
            EndContext();
            BeginContext(1871, 179, false);
#line 46 "E:\GeneticSystem Unified\GC 21.2.20 J\GeneticSystem\HISSystem\Areas\Admin\Views\Patient\CompletedAppointments.cshtml"
           Write(Html.DropDownListFor(m => m.DepartmentID, new SelectList(ViewBag.Department, "ID", "Name"), "Select department", new { @Class = "form-control", onchange = "filterDoctors(this)" }));

#line default
#line hidden
            EndContext();
            BeginContext(2050, 220, true);
            WriteLiteral("\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div id=\"dp\"></div>\r\n        </div>\r\n        \r\n    </div>\r\n\r\n</div>\r\n<div class=\"clear\">\r\n</div>\r\n\r\n\r\n");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(2287, 4616, true);
                WriteLiteral(@"
    <script type=""text/javascript"" src=""https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.22/pdfmake.min.js""></script>
    <script type=""text/javascript"" src=""https://cdnjs.cloudflare.com/ajax/libs/html2canvas/0.4.1/html2canvas.min.js""></script>
    <script>
        $('.getAppointmentList').click(function () {
            debugger

            $.ajax({
                url: '/admin/patient/appointmentSearchList',
                type: 'GET',
                success: function (result) {
                    debugger
                    $(""#searchwithid"").show();
                    $(""#searchwithid"").html(result);
                },
                error: function (xhr, status) {
                    debugger
                }
            });
        });
    </script>
    <script>
        function getPatients() {
            //  debugger
            $(""#searchwithid"").show();

        }
        function patientsearch(i) {

            var searchstring = $(""#searchinappointment"").val");
                WriteLiteral(@"();
            var page = parseInt(i);
            var StartDate = $(""#searchstartdate"").val();
            console.log(StartDate);
            var EndDate = $(""#searchenddate"").val();
            $.ajax({
                url: '/admin/patient/SearchInCompletedAppointmentList',
                data: {
                    Id: searchstring,
                    page: page,
                    StartDate: StartDate,
                    EndDate: EndDate

                },
                success: function (result) {
                    debugger
                    $('#myModal').modal({
                        backdrop: 'static',
                        keyboard: false
                    }),
                        //
                        $(""#searchwithid"").empty();
                    $(""#searchwithid"").append(result);
                    $(""#searchinappointment"").show();
                    $(""#searchinappointment"").val(searchstring);
                    $(""#searchstartdate"").val(Star");
                WriteLiteral(@"tDate);
                    $(""#searchenddate"").val(EndDate);
                    $(""#searchinappointment"").focus();

                }
            });
        }
        function closediv1() {
            $(""#searchwithid"").hide();
        }


        $(function () {
            $(""#Date"").datepicker();
        });



        var dp = new DayPilot.Month(""dp"");
        dp.init();
        debugger
        dp.events.load(""/admin/patient/GetEvents"");
        console.log(dp.events)

        function getAppointmentList() {
            $(""#searchwithid"").show();

        }

        //var nav = new DayPilot.Navigator(""nav"");
        //nav.showMonths = 3;
        //nav.skipMonths = 3;
        //nav.selectMode = ""week"";
        //nav.onTimeRangeSelected = function (args) {
        //    dp.startDate = args.day;
        //    dp.update();
        //    loadEvents();
        //};
        //nav.init();

        //var Columndata;

        //var dp = new DayPilot.Calendar(""dp"");

");
                WriteLiteral(@"        //dp.viewType = ""Resources"";
        //dp.columns = [];
        function fnExcelReport() {
            var tab_text = ""<table border='2px'><tr bgcolor='#87AFC6'>"";
            var textRange; var j = 0;
            var tab = document.getElementById('appointmentTbl'); // id of table

            for (j = 0; j < tab.rows.length; j++) {
                tab_text = tab_text + tab.rows[j].innerHTML + ""</tr>"";
            }

            tab_text = tab_text + ""</table>"";
            tab_text = tab_text.replace(/<A[^>]*>|<\/A>/g, """");//remove if u want links in your table
            tab_text = tab_text.replace(/<img[^>]*>/gi, """"); // remove if u want images in your table
            tab_text = tab_text.replace(/<input[^>]*>|<\/input>/gi, """"); // reomves input params

            var ua = window.navigator.userAgent;
            var msie = ua.indexOf(""MSIE "");

            if (msie > 0 || !!navigator.userAgent.match(/Trident.*rv\:11\./))      // If Internet Explorer
            {
           ");
                WriteLiteral(@"     txtArea1.document.open(""txt/html"", ""replace"");
                txtArea1.document.write(tab_text);
                txtArea1.document.close();
                txtArea1.focus();
                sa = txtArea1.document.execCommand(""SaveAs"", true, ""Patients.xls"");
            }
            else                 //other browser not tested on IE 11
                sa = window.open('data:application/vnd.ms-excel,' + encodeURIComponent(tab_text));

            return (sa);
        }
        
    </script>

");
                EndContext();
                BeginContext(17660, 2, true);
                WriteLiteral("\r\n");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Data.Models.Appointment> Html { get; private set; }
    }
}
#pragma warning restore 1591
